---
# ansible-playbook playbooks/spotify.yml -K

- hosts: localhost
  become: true
  become_method: sudo
  tasks:
    - name: Get url to configure the spotify repository # noqa command-instead-of-module
      ansible.builtin.shell: >
        set -o pipefail |
        curl -sL https://www.spotify.com/us/download/linux/ | grep -Eo "(http|https)://[a-zA-Z0-9./?=_-]*" | grep pubkey
      register: spotify_gpg_url
      changed_when: false
      failed_when: spotify_gpg_url.rc != 0

    - name: Download spotify gpg pubkey to tmp destination
      ansible.builtin.get_url:
        url: "{{ spotify_gpg_url.stdout }}"
        dest: /tmp/spotify
        mode: 0644
        force: true

    - name: Extract gpg key to spotify.gpg
      ansible.builtin.shell: >
        set -o pipefail |
        /usr/bin/cat /tmp/spotify | gpg --dearmor > /tmp/spotify.gpg
      register: result
      changed_when: false
      failed_when: result.rc != 0

    - name: Import spotify.gpg to /etc/apt/keyrings/spotify.gpg
      ansible.builtin.command: >
        /usr/bin/install -D -o root -g root -m 644 /tmp/spotify.gpg /etc/apt/keyrings/spotify.gpg
      register: result
      changed_when: false
      failed_when: result.rc != 0

    - name: Enable the spotify repository
      ansible.builtin.apt_repository:
        repo: "deb http://repository.spotify.com stable non-free"
        filename: spotify
        state: present

    - name: Update repositories cache and install "spotify" package
      ansible.builtin.apt:
        name: spotify-client
        update_cache: true
        state: present

    - name: Remove /tmp/spotify* files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/tmp/spotify"
        - "/tmp/spotify.gpg"
